env:
  browser: true
  es2022: true
plugins:
  - react
  - "@typescript-eslint"
  - promise
  - react-hooks
extends:
  - airbnb
  - plugin:import/typescript
  - plugin:@typescript-eslint/strict
  - plugin:react/recommended
  - plugin:promise/recommended
  - plugin:react-hooks/recommended
parser: "@typescript-eslint/parser"
parserOptions:
  ecmaFeatures:
    jsx: true
  ecmaVersion: latest
  sourceType: module
  project: ["./tsconfig.json"]
rules:
  quotes: ["error", "double"]
  semi: ["error", "never", { "beforeStatementContinuationChars": "always" }]
  max-len: off
  no-unused-vars: ["error", { "args": "none", "varsIgnorePattern": "_.*" }]
  "@typescript-eslint/no-unused-vars": off # ["error", { "args": "none" }]
  no-use-before-define: off
  no-undef: off # because of JSX
  max-classes-per-file: off
  comma-dangle: off
  no-multiple-empty-lines: off
  nonblock-statement-body-position: off # allows for if without {}
  curly: off
  arrow-body-style: off
  no-multi-spaces: ["error", { "ignoreEOLComments": true }]
  "@typescript-eslint/no-non-null-assertion": off
  import/extensions: off
  no-debugger: off
  no-console: off
  object-curly-newline: off
  no-param-reassign: ["error", { "props": true, "ignorePropertyModificationsFor": ["result", "acc"] }]
  lines-between-class-members: ["error", "always", { "exceptAfterSingleLine": true }]

  react/jsx-one-expression-per-line: off
  react/state-in-constructor: off
  react/button-has-type: off # really dont think this is necessary
  react/destructuring-assignment: off
  react/jsx-filename-extension: ["error", { "extensions": [".ts", ".tsx"] }]
  react/function-component-definition: ["error", { "namedComponents": "arrow-function" }]
  react/require-default-props: off
  react/jsx-closing-bracket-location: off
  react/jsx-max-props-per-line: off
  react/jsx-first-prop-new-line: off
  react/jsx-props-no-spreading: off
  react/prop-types: ["error", { skipUndeclared: true }]
  react/jsx-no-useless-fragment: off

  # these should be on before commiting
  react/prefer-stateless-function: off

  import/prefer-default-export: off
  import/no-unresolved: off
  import/order: off

  "@typescript-eslint/no-empty-function": off
  import/newline-after-import: off

  react-hooks/rules-of-hooks: "error"
  "react-hooks/exhaustive-deps": "warn"
  spaced-comment: off

  import/no-import-module-exports: off    # so i can embed the scrapers in the main codebase
  padded-blocks: off
  "import/no-extraneous-dependencies": ["error", { "devDependencies": true }]
  "@typescript-eslint/ban-ts-comment": off
  "@typescript-eslint/no-explicit-any": off
  quote-props: off
  no-restricted-syntax: off
  "@typescript-eslint/consistent-type-definitions": off
  "@typescript-eslint/prefer-string-starts-ends-with": off

  "@typescript-eslint/no-floating-promises": ["error"]
  "no-void": off
  "no-shadow": ["error", { "ignoreOnInitialization": true }]
